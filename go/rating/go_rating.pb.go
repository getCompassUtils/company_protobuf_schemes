// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: proto/go_rating.proto

package rating

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// формат запроса для system.status
type SystemStatusRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemStatusRequestStruct) Reset() {
	*x = SystemStatusRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRequestStruct) ProtoMessage() {}

func (x *SystemStatusRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{0}
}

// формат ответа для system.status
type SystemStatusResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Goroutines int64  `protobuf:"varint,2,opt,name=goroutines,proto3" json:"goroutines,omitempty"`
	Memory     int64  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryKb   string `protobuf:"bytes,4,opt,name=memory_kb,json=memoryKb,proto3" json:"memory_kb,omitempty"`
	MemoryMb   string `protobuf:"bytes,5,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Uptime     int32  `protobuf:"varint,6,opt,name=uptime,proto3" json:"uptime,omitempty"`
}

func (x *SystemStatusResponseStruct) Reset() {
	*x = SystemStatusResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusResponseStruct) ProtoMessage() {}

func (x *SystemStatusResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{1}
}

func (x *SystemStatusResponseStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetGoroutines() int64 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemoryKb() string {
	if x != nil {
		return x.MemoryKb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetMemoryMb() string {
	if x != nil {
		return x.MemoryMb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetUptime() int32 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

// формат запроса для system.traceGoroutine
type SystemTraceGoroutineRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineRequestStruct) Reset() {
	*x = SystemTraceGoroutineRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineRequestStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{2}
}

// формат ответа для system.traceGoroutine
type SystemTraceGoroutineResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineResponseStruct) Reset() {
	*x = SystemTraceGoroutineResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineResponseStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{3}
}

// формат запроса для system.traceMemory
type SystemTraceMemoryRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryRequestStruct) Reset() {
	*x = SystemTraceMemoryRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryRequestStruct) ProtoMessage() {}

func (x *SystemTraceMemoryRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{4}
}

// формат ответа для system.traceMemory
type SystemTraceMemoryResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryResponseStruct) Reset() {
	*x = SystemTraceMemoryResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryResponseStruct) ProtoMessage() {}

func (x *SystemTraceMemoryResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{5}
}

// формат запроса для system.cpuProfile
type SystemCpuProfileRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SystemCpuProfileRequestStruct) Reset() {
	*x = SystemCpuProfileRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileRequestStruct) ProtoMessage() {}

func (x *SystemCpuProfileRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{6}
}

func (x *SystemCpuProfileRequestStruct) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// формат ответа для system.cpuProfile
type SystemCpuProfileResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCpuProfileResponseStruct) Reset() {
	*x = SystemCpuProfileResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileResponseStruct) ProtoMessage() {}

func (x *SystemCpuProfileResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{7}
}

// формат запроса для system.reloadConfig
type SystemReloadConfigRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadConfigRequestStruct) Reset() {
	*x = SystemReloadConfigRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadConfigRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadConfigRequestStruct) ProtoMessage() {}

func (x *SystemReloadConfigRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadConfigRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadConfigRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{8}
}

// формат ответа для system.reloadConfig
type SystemReloadConfigResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoggingLevel   int32  `protobuf:"varint,1,opt,name=logging_level,json=loggingLevel,proto3" json:"logging_level,omitempty"`
	ServerType     string `protobuf:"bytes,2,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	TcpPort        int64  `protobuf:"varint,3,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	GrpcPort       int64  `protobuf:"varint,4,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	RabbitQueue    string `protobuf:"bytes,5,opt,name=rabbit_queue,json=rabbitQueue,proto3" json:"rabbit_queue,omitempty"`
	RabbitExchange string `protobuf:"bytes,6,opt,name=rabbit_exchange,json=rabbitExchange,proto3" json:"rabbit_exchange,omitempty"`
}

func (x *SystemReloadConfigResponseStruct) Reset() {
	*x = SystemReloadConfigResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadConfigResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadConfigResponseStruct) ProtoMessage() {}

func (x *SystemReloadConfigResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadConfigResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadConfigResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{9}
}

func (x *SystemReloadConfigResponseStruct) GetLoggingLevel() int32 {
	if x != nil {
		return x.LoggingLevel
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetServerType() string {
	if x != nil {
		return x.ServerType
	}
	return ""
}

func (x *SystemReloadConfigResponseStruct) GetTcpPort() int64 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetGrpcPort() int64 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetRabbitQueue() string {
	if x != nil {
		return x.RabbitQueue
	}
	return ""
}

func (x *SystemReloadConfigResponseStruct) GetRabbitExchange() string {
	if x != nil {
		return x.RabbitExchange
	}
	return ""
}

// формат запроса для system.reloadSharding
type SystemReloadShardingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadShardingRequestStruct) Reset() {
	*x = SystemReloadShardingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadShardingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadShardingRequestStruct) ProtoMessage() {}

func (x *SystemReloadShardingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadShardingRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadShardingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{10}
}

// формат ответа для system.reloadSharding
type SystemReloadShardingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadShardingResponseStruct) Reset() {
	*x = SystemReloadShardingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadShardingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadShardingResponseStruct) ProtoMessage() {}

func (x *SystemReloadShardingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadShardingResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadShardingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{11}
}

// формат запроса для system.checkSharding
type SystemCheckShardingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SystemCheckShardingRequestStruct) Reset() {
	*x = SystemCheckShardingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckShardingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckShardingRequestStruct) ProtoMessage() {}

func (x *SystemCheckShardingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckShardingRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCheckShardingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{12}
}

func (x *SystemCheckShardingRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для system.checkSharding
type SystemCheckShardingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCheckShardingResponseStruct) Reset() {
	*x = SystemCheckShardingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckShardingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckShardingResponseStruct) ProtoMessage() {}

func (x *SystemCheckShardingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckShardingResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCheckShardingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{13}
}

// формат запроса для rating.updateConversationAnswerState
type RatingUpdateConversationAnswerStateRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationKey    string  `protobuf:"bytes,1,opt,name=conversation_key,json=conversationKey,proto3" json:"conversation_key,omitempty"`
	SenderUserId       int64   `protobuf:"varint,2,opt,name=sender_user_id,json=senderUserId,proto3" json:"sender_user_id,omitempty"`
	ReceiverUserIdList []int64 `protobuf:"varint,3,rep,packed,name=receiver_user_id_list,json=receiverUserIdList,proto3" json:"receiver_user_id_list,omitempty"`
	SentAt             int64   `protobuf:"varint,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	SpaceId            int64   `protobuf:"varint,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	LocalSentAt        string  `protobuf:"bytes,6,opt,name=local_sent_at,json=localSentAt,proto3" json:"local_sent_at,omitempty"`
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) Reset() {
	*x = RatingUpdateConversationAnswerStateRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingUpdateConversationAnswerStateRequestStruct) ProtoMessage() {}

func (x *RatingUpdateConversationAnswerStateRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingUpdateConversationAnswerStateRequestStruct.ProtoReflect.Descriptor instead.
func (*RatingUpdateConversationAnswerStateRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{14}
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) GetConversationKey() string {
	if x != nil {
		return x.ConversationKey
	}
	return ""
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) GetSenderUserId() int64 {
	if x != nil {
		return x.SenderUserId
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) GetReceiverUserIdList() []int64 {
	if x != nil {
		return x.ReceiverUserIdList
	}
	return nil
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateRequestStruct) GetLocalSentAt() string {
	if x != nil {
		return x.LocalSentAt
	}
	return ""
}

// формат ответа для rating.updateConversationAnswerState
type RatingUpdateConversationAnswerStateResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId                  int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	ConversationKey          string `protobuf:"bytes,2,opt,name=conversation_key,json=conversationKey,proto3" json:"conversation_key,omitempty"`
	AnswerTime               int64  `protobuf:"varint,3,opt,name=answer_time,json=answerTime,proto3" json:"answer_time,omitempty"`
	CreatedAt                int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MicroConversationStartAt int64  `protobuf:"varint,5,opt,name=micro_conversation_start_at,json=microConversationStartAt,proto3" json:"micro_conversation_start_at,omitempty"`
	MicroConversationEndAt   int64  `protobuf:"varint,6,opt,name=micro_conversation_end_at,json=microConversationEndAt,proto3" json:"micro_conversation_end_at,omitempty"`
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) Reset() {
	*x = RatingUpdateConversationAnswerStateResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingUpdateConversationAnswerStateResponseStruct) ProtoMessage() {}

func (x *RatingUpdateConversationAnswerStateResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingUpdateConversationAnswerStateResponseStruct.ProtoReflect.Descriptor instead.
func (*RatingUpdateConversationAnswerStateResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{15}
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) GetConversationKey() string {
	if x != nil {
		return x.ConversationKey
	}
	return ""
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) GetAnswerTime() int64 {
	if x != nil {
		return x.AnswerTime
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) GetMicroConversationStartAt() int64 {
	if x != nil {
		return x.MicroConversationStartAt
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateResponseStruct) GetMicroConversationEndAt() int64 {
	if x != nil {
		return x.MicroConversationEndAt
	}
	return 0
}

// формат запроса для rating.updateConversationAnswerStateForReceivers
type RatingUpdateConversationAnswerStateForReceiversRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationKey    string  `protobuf:"bytes,1,opt,name=conversation_key,json=conversationKey,proto3" json:"conversation_key,omitempty"`
	SenderUserId       int64   `protobuf:"varint,2,opt,name=sender_user_id,json=senderUserId,proto3" json:"sender_user_id,omitempty"`
	ReceiverUserIdList []int64 `protobuf:"varint,3,rep,packed,name=receiver_user_id_list,json=receiverUserIdList,proto3" json:"receiver_user_id_list,omitempty"`
	SentAt             int64   `protobuf:"varint,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	SpaceId            int64   `protobuf:"varint,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	LocalSentAt        string  `protobuf:"bytes,6,opt,name=local_sent_at,json=localSentAt,proto3" json:"local_sent_at,omitempty"`
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) Reset() {
	*x = RatingUpdateConversationAnswerStateForReceiversRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingUpdateConversationAnswerStateForReceiversRequestStruct) ProtoMessage() {}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingUpdateConversationAnswerStateForReceiversRequestStruct.ProtoReflect.Descriptor instead.
func (*RatingUpdateConversationAnswerStateForReceiversRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{16}
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) GetConversationKey() string {
	if x != nil {
		return x.ConversationKey
	}
	return ""
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) GetSenderUserId() int64 {
	if x != nil {
		return x.SenderUserId
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) GetReceiverUserIdList() []int64 {
	if x != nil {
		return x.ReceiverUserIdList
	}
	return nil
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *RatingUpdateConversationAnswerStateForReceiversRequestStruct) GetLocalSentAt() string {
	if x != nil {
		return x.LocalSentAt
	}
	return ""
}

// формат ответа для rating.updateConversationAnswerStateForReceivers
type RatingUpdateConversationAnswerStateForReceiversResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RatingUpdateConversationAnswerStateForReceiversResponseStruct) Reset() {
	*x = RatingUpdateConversationAnswerStateForReceiversResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingUpdateConversationAnswerStateForReceiversResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingUpdateConversationAnswerStateForReceiversResponseStruct) ProtoMessage() {}

func (x *RatingUpdateConversationAnswerStateForReceiversResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingUpdateConversationAnswerStateForReceiversResponseStruct.ProtoReflect.Descriptor instead.
func (*RatingUpdateConversationAnswerStateForReceiversResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{17}
}

// формат запроса для rating.closeMicroConversation
type RatingCloseMicroConversationRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationKey    string  `protobuf:"bytes,1,opt,name=conversation_key,json=conversationKey,proto3" json:"conversation_key,omitempty"`
	SenderUserId       int64   `protobuf:"varint,2,opt,name=sender_user_id,json=senderUserId,proto3" json:"sender_user_id,omitempty"`
	ReceiverUserIdList []int64 `protobuf:"varint,3,rep,packed,name=receiver_user_id_list,json=receiverUserIdList,proto3" json:"receiver_user_id_list,omitempty"`
	SpaceId            int64   `protobuf:"varint,4,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *RatingCloseMicroConversationRequestStruct) Reset() {
	*x = RatingCloseMicroConversationRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingCloseMicroConversationRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingCloseMicroConversationRequestStruct) ProtoMessage() {}

func (x *RatingCloseMicroConversationRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingCloseMicroConversationRequestStruct.ProtoReflect.Descriptor instead.
func (*RatingCloseMicroConversationRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{18}
}

func (x *RatingCloseMicroConversationRequestStruct) GetConversationKey() string {
	if x != nil {
		return x.ConversationKey
	}
	return ""
}

func (x *RatingCloseMicroConversationRequestStruct) GetSenderUserId() int64 {
	if x != nil {
		return x.SenderUserId
	}
	return 0
}

func (x *RatingCloseMicroConversationRequestStruct) GetReceiverUserIdList() []int64 {
	if x != nil {
		return x.ReceiverUserIdList
	}
	return nil
}

func (x *RatingCloseMicroConversationRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

// формат ответа для rating.updateConversationAnswerStateForReceivers
type RatingCloseMicroConversationResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RatingCloseMicroConversationResponseStruct) Reset() {
	*x = RatingCloseMicroConversationResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingCloseMicroConversationResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingCloseMicroConversationResponseStruct) ProtoMessage() {}

func (x *RatingCloseMicroConversationResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingCloseMicroConversationResponseStruct.ProtoReflect.Descriptor instead.
func (*RatingCloseMicroConversationResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{19}
}

// формат запроса для rating.addScreenTime
type RatingAddScreenTimeRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId       int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	UserId        int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ScreenTime    int64  `protobuf:"varint,3,opt,name=screen_time,json=screenTime,proto3" json:"screen_time,omitempty"`
	LocalOnlineAt string `protobuf:"bytes,4,opt,name=local_online_at,json=localOnlineAt,proto3" json:"local_online_at,omitempty"`
}

func (x *RatingAddScreenTimeRequestStruct) Reset() {
	*x = RatingAddScreenTimeRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingAddScreenTimeRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingAddScreenTimeRequestStruct) ProtoMessage() {}

func (x *RatingAddScreenTimeRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingAddScreenTimeRequestStruct.ProtoReflect.Descriptor instead.
func (*RatingAddScreenTimeRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{20}
}

func (x *RatingAddScreenTimeRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *RatingAddScreenTimeRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RatingAddScreenTimeRequestStruct) GetScreenTime() int64 {
	if x != nil {
		return x.ScreenTime
	}
	return 0
}

func (x *RatingAddScreenTimeRequestStruct) GetLocalOnlineAt() string {
	if x != nil {
		return x.LocalOnlineAt
	}
	return ""
}

// формат ответа для rating.addScreenTime
type RatingAddScreenTimeResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RatingAddScreenTimeResponseStruct) Reset() {
	*x = RatingAddScreenTimeResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingAddScreenTimeResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingAddScreenTimeResponseStruct) ProtoMessage() {}

func (x *RatingAddScreenTimeResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingAddScreenTimeResponseStruct.ProtoReflect.Descriptor instead.
func (*RatingAddScreenTimeResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{21}
}

// формат запроса для rating.incActionCount
type RatingIncActionCountRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId         int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	UserId          int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationMap string `protobuf:"bytes,3,opt,name=conversation_map,json=conversationMap,proto3" json:"conversation_map,omitempty"`
	Action          string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	IsHuman         int64  `protobuf:"varint,5,opt,name=is_human,json=isHuman,proto3" json:"is_human,omitempty"`
}

func (x *RatingIncActionCountRequestStruct) Reset() {
	*x = RatingIncActionCountRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingIncActionCountRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingIncActionCountRequestStruct) ProtoMessage() {}

func (x *RatingIncActionCountRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingIncActionCountRequestStruct.ProtoReflect.Descriptor instead.
func (*RatingIncActionCountRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{22}
}

func (x *RatingIncActionCountRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *RatingIncActionCountRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RatingIncActionCountRequestStruct) GetConversationMap() string {
	if x != nil {
		return x.ConversationMap
	}
	return ""
}

func (x *RatingIncActionCountRequestStruct) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RatingIncActionCountRequestStruct) GetIsHuman() int64 {
	if x != nil {
		return x.IsHuman
	}
	return 0
}

// формат ответа для rating.incActionCount
type RatingIncActionCountResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RatingIncActionCountResponseStruct) Reset() {
	*x = RatingIncActionCountResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_rating_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingIncActionCountResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingIncActionCountResponseStruct) ProtoMessage() {}

func (x *RatingIncActionCountResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_rating_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingIncActionCountResponseStruct.ProtoReflect.Descriptor instead.
func (*RatingIncActionCountResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_rating_proto_rawDescGZIP(), []int{23}
}

var File_proto_go_rating_proto protoreflect.FileDescriptor

var file_proto_go_rating_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x70, 0x63, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0xba, 0x01, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a,
	0x21, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x33, 0x0a,
	0x1d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61,
	0x62, 0x62, 0x69, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x41, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x30, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x22, 0xb3, 0x02, 0x0a, 0x31, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x41, 0x74,
	0x22, 0x9a, 0x02, 0x0a, 0x3c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x22, 0x3f, 0x0a,
	0x3d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xca,
	0x01, 0x0a, 0x29, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x2a, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x20, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0xb5, 0x01, 0x0a, 0x21, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x69, 0x73, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x22, 0x24, 0x0a, 0x22, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x32, 0x94,
	0x0c, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x5f, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x1a, 0x26, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x12, 0x2d, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x12, 0x71, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x2e, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x13,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x2c, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x00, 0x12, 0xa4, 0x01, 0x0a, 0x23, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x2e, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x3d, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0xc8, 0x01, 0x0a, 0x2f, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x48, 0x2e,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x49, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x1c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x36, 0x2e, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x13, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x2e,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_go_rating_proto_rawDescOnce sync.Once
	file_proto_go_rating_proto_rawDescData = file_proto_go_rating_proto_rawDesc
)

func file_proto_go_rating_proto_rawDescGZIP() []byte {
	file_proto_go_rating_proto_rawDescOnce.Do(func() {
		file_proto_go_rating_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_go_rating_proto_rawDescData)
	})
	return file_proto_go_rating_proto_rawDescData
}

var file_proto_go_rating_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_go_rating_proto_goTypes = []interface{}{
	(*SystemStatusRequestStruct)(nil),                                     // 0: ratingGrpc.SystemStatusRequestStruct
	(*SystemStatusResponseStruct)(nil),                                    // 1: ratingGrpc.SystemStatusResponseStruct
	(*SystemTraceGoroutineRequestStruct)(nil),                             // 2: ratingGrpc.SystemTraceGoroutineRequestStruct
	(*SystemTraceGoroutineResponseStruct)(nil),                            // 3: ratingGrpc.SystemTraceGoroutineResponseStruct
	(*SystemTraceMemoryRequestStruct)(nil),                                // 4: ratingGrpc.SystemTraceMemoryRequestStruct
	(*SystemTraceMemoryResponseStruct)(nil),                               // 5: ratingGrpc.SystemTraceMemoryResponseStruct
	(*SystemCpuProfileRequestStruct)(nil),                                 // 6: ratingGrpc.SystemCpuProfileRequestStruct
	(*SystemCpuProfileResponseStruct)(nil),                                // 7: ratingGrpc.SystemCpuProfileResponseStruct
	(*SystemReloadConfigRequestStruct)(nil),                               // 8: ratingGrpc.SystemReloadConfigRequestStruct
	(*SystemReloadConfigResponseStruct)(nil),                              // 9: ratingGrpc.SystemReloadConfigResponseStruct
	(*SystemReloadShardingRequestStruct)(nil),                             // 10: ratingGrpc.SystemReloadShardingRequestStruct
	(*SystemReloadShardingResponseStruct)(nil),                            // 11: ratingGrpc.SystemReloadShardingResponseStruct
	(*SystemCheckShardingRequestStruct)(nil),                              // 12: ratingGrpc.SystemCheckShardingRequestStruct
	(*SystemCheckShardingResponseStruct)(nil),                             // 13: ratingGrpc.SystemCheckShardingResponseStruct
	(*RatingUpdateConversationAnswerStateRequestStruct)(nil),              // 14: ratingGrpc.RatingUpdateConversationAnswerStateRequestStruct
	(*RatingUpdateConversationAnswerStateResponseStruct)(nil),             // 15: ratingGrpc.RatingUpdateConversationAnswerStateResponseStruct
	(*RatingUpdateConversationAnswerStateForReceiversRequestStruct)(nil),  // 16: ratingGrpc.RatingUpdateConversationAnswerStateForReceiversRequestStruct
	(*RatingUpdateConversationAnswerStateForReceiversResponseStruct)(nil), // 17: ratingGrpc.RatingUpdateConversationAnswerStateForReceiversResponseStruct
	(*RatingCloseMicroConversationRequestStruct)(nil),                     // 18: ratingGrpc.RatingCloseMicroConversationRequestStruct
	(*RatingCloseMicroConversationResponseStruct)(nil),                    // 19: ratingGrpc.RatingCloseMicroConversationResponseStruct
	(*RatingAddScreenTimeRequestStruct)(nil),                              // 20: ratingGrpc.RatingAddScreenTimeRequestStruct
	(*RatingAddScreenTimeResponseStruct)(nil),                             // 21: ratingGrpc.RatingAddScreenTimeResponseStruct
	(*RatingIncActionCountRequestStruct)(nil),                             // 22: ratingGrpc.RatingIncActionCountRequestStruct
	(*RatingIncActionCountResponseStruct)(nil),                            // 23: ratingGrpc.RatingIncActionCountResponseStruct
}
var file_proto_go_rating_proto_depIdxs = []int32{
	0,  // 0: ratingGrpc.rating.SystemStatus:input_type -> ratingGrpc.SystemStatusRequestStruct
	2,  // 1: ratingGrpc.rating.SystemTraceGoroutine:input_type -> ratingGrpc.SystemTraceGoroutineRequestStruct
	4,  // 2: ratingGrpc.rating.SystemTraceMemory:input_type -> ratingGrpc.SystemTraceMemoryRequestStruct
	6,  // 3: ratingGrpc.rating.SystemCpuProfile:input_type -> ratingGrpc.SystemCpuProfileRequestStruct
	8,  // 4: ratingGrpc.rating.SystemReloadConfig:input_type -> ratingGrpc.SystemReloadConfigRequestStruct
	10, // 5: ratingGrpc.rating.SystemReloadSharding:input_type -> ratingGrpc.SystemReloadShardingRequestStruct
	12, // 6: ratingGrpc.rating.SystemCheckSharding:input_type -> ratingGrpc.SystemCheckShardingRequestStruct
	14, // 7: ratingGrpc.rating.RatingUpdateConversationAnswerState:input_type -> ratingGrpc.RatingUpdateConversationAnswerStateRequestStruct
	16, // 8: ratingGrpc.rating.RatingUpdateConversationAnswerStateForReceivers:input_type -> ratingGrpc.RatingUpdateConversationAnswerStateForReceiversRequestStruct
	18, // 9: ratingGrpc.rating.RatingCloseMicroConversation:input_type -> ratingGrpc.RatingCloseMicroConversationRequestStruct
	20, // 10: ratingGrpc.rating.RatingAddScreenTime:input_type -> ratingGrpc.RatingAddScreenTimeRequestStruct
	22, // 11: ratingGrpc.rating.RatingIncActionCount:input_type -> ratingGrpc.RatingIncActionCountRequestStruct
	1,  // 12: ratingGrpc.rating.SystemStatus:output_type -> ratingGrpc.SystemStatusResponseStruct
	3,  // 13: ratingGrpc.rating.SystemTraceGoroutine:output_type -> ratingGrpc.SystemTraceGoroutineResponseStruct
	5,  // 14: ratingGrpc.rating.SystemTraceMemory:output_type -> ratingGrpc.SystemTraceMemoryResponseStruct
	7,  // 15: ratingGrpc.rating.SystemCpuProfile:output_type -> ratingGrpc.SystemCpuProfileResponseStruct
	9,  // 16: ratingGrpc.rating.SystemReloadConfig:output_type -> ratingGrpc.SystemReloadConfigResponseStruct
	11, // 17: ratingGrpc.rating.SystemReloadSharding:output_type -> ratingGrpc.SystemReloadShardingResponseStruct
	13, // 18: ratingGrpc.rating.SystemCheckSharding:output_type -> ratingGrpc.SystemCheckShardingResponseStruct
	15, // 19: ratingGrpc.rating.RatingUpdateConversationAnswerState:output_type -> ratingGrpc.RatingUpdateConversationAnswerStateResponseStruct
	17, // 20: ratingGrpc.rating.RatingUpdateConversationAnswerStateForReceivers:output_type -> ratingGrpc.RatingUpdateConversationAnswerStateForReceiversResponseStruct
	19, // 21: ratingGrpc.rating.RatingCloseMicroConversation:output_type -> ratingGrpc.RatingCloseMicroConversationResponseStruct
	21, // 22: ratingGrpc.rating.RatingAddScreenTime:output_type -> ratingGrpc.RatingAddScreenTimeResponseStruct
	23, // 23: ratingGrpc.rating.RatingIncActionCount:output_type -> ratingGrpc.RatingIncActionCountResponseStruct
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_go_rating_proto_init() }
func file_proto_go_rating_proto_init() {
	if File_proto_go_rating_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_go_rating_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadConfigRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadConfigResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadShardingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadShardingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckShardingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckShardingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingUpdateConversationAnswerStateRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingUpdateConversationAnswerStateResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingUpdateConversationAnswerStateForReceiversRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingUpdateConversationAnswerStateForReceiversResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingCloseMicroConversationRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingCloseMicroConversationResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingAddScreenTimeRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingAddScreenTimeResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingIncActionCountRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_rating_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingIncActionCountResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_go_rating_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_go_rating_proto_goTypes,
		DependencyIndexes: file_proto_go_rating_proto_depIdxs,
		MessageInfos:      file_proto_go_rating_proto_msgTypes,
	}.Build()
	File_proto_go_rating_proto = out.File
	file_proto_go_rating_proto_rawDesc = nil
	file_proto_go_rating_proto_goTypes = nil
	file_proto_go_rating_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RatingClient is the client API for Rating service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RatingClient interface {
	SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error)
	SystemReloadConfig(ctx context.Context, in *SystemReloadConfigRequestStruct, opts ...grpc.CallOption) (*SystemReloadConfigResponseStruct, error)
	SystemReloadSharding(ctx context.Context, in *SystemReloadShardingRequestStruct, opts ...grpc.CallOption) (*SystemReloadShardingResponseStruct, error)
	SystemCheckSharding(ctx context.Context, in *SystemCheckShardingRequestStruct, opts ...grpc.CallOption) (*SystemCheckShardingResponseStruct, error)
	RatingUpdateConversationAnswerState(ctx context.Context, in *RatingUpdateConversationAnswerStateRequestStruct, opts ...grpc.CallOption) (*RatingUpdateConversationAnswerStateResponseStruct, error)
	RatingUpdateConversationAnswerStateForReceivers(ctx context.Context, in *RatingUpdateConversationAnswerStateForReceiversRequestStruct, opts ...grpc.CallOption) (*RatingUpdateConversationAnswerStateForReceiversResponseStruct, error)
	RatingCloseMicroConversation(ctx context.Context, in *RatingCloseMicroConversationRequestStruct, opts ...grpc.CallOption) (*RatingCloseMicroConversationResponseStruct, error)
	RatingAddScreenTime(ctx context.Context, in *RatingAddScreenTimeRequestStruct, opts ...grpc.CallOption) (*RatingAddScreenTimeResponseStruct, error)
	RatingIncActionCount(ctx context.Context, in *RatingIncActionCountRequestStruct, opts ...grpc.CallOption) (*RatingIncActionCountResponseStruct, error)
}

type ratingClient struct {
	cc grpc.ClientConnInterface
}

func NewRatingClient(cc grpc.ClientConnInterface) RatingClient {
	return &ratingClient{cc}
}

func (c *ratingClient) SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error) {
	out := new(SystemStatusResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error) {
	out := new(SystemTraceGoroutineResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemTraceGoroutine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error) {
	out := new(SystemTraceMemoryResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemTraceMemory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error) {
	out := new(SystemCpuProfileResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemCpuProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) SystemReloadConfig(ctx context.Context, in *SystemReloadConfigRequestStruct, opts ...grpc.CallOption) (*SystemReloadConfigResponseStruct, error) {
	out := new(SystemReloadConfigResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemReloadConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) SystemReloadSharding(ctx context.Context, in *SystemReloadShardingRequestStruct, opts ...grpc.CallOption) (*SystemReloadShardingResponseStruct, error) {
	out := new(SystemReloadShardingResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemReloadSharding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) SystemCheckSharding(ctx context.Context, in *SystemCheckShardingRequestStruct, opts ...grpc.CallOption) (*SystemCheckShardingResponseStruct, error) {
	out := new(SystemCheckShardingResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/SystemCheckSharding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) RatingUpdateConversationAnswerState(ctx context.Context, in *RatingUpdateConversationAnswerStateRequestStruct, opts ...grpc.CallOption) (*RatingUpdateConversationAnswerStateResponseStruct, error) {
	out := new(RatingUpdateConversationAnswerStateResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/RatingUpdateConversationAnswerState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) RatingUpdateConversationAnswerStateForReceivers(ctx context.Context, in *RatingUpdateConversationAnswerStateForReceiversRequestStruct, opts ...grpc.CallOption) (*RatingUpdateConversationAnswerStateForReceiversResponseStruct, error) {
	out := new(RatingUpdateConversationAnswerStateForReceiversResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/RatingUpdateConversationAnswerStateForReceivers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) RatingCloseMicroConversation(ctx context.Context, in *RatingCloseMicroConversationRequestStruct, opts ...grpc.CallOption) (*RatingCloseMicroConversationResponseStruct, error) {
	out := new(RatingCloseMicroConversationResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/RatingCloseMicroConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) RatingAddScreenTime(ctx context.Context, in *RatingAddScreenTimeRequestStruct, opts ...grpc.CallOption) (*RatingAddScreenTimeResponseStruct, error) {
	out := new(RatingAddScreenTimeResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/RatingAddScreenTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingClient) RatingIncActionCount(ctx context.Context, in *RatingIncActionCountRequestStruct, opts ...grpc.CallOption) (*RatingIncActionCountResponseStruct, error) {
	out := new(RatingIncActionCountResponseStruct)
	err := c.cc.Invoke(ctx, "/ratingGrpc.rating/RatingIncActionCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RatingServer is the server API for Rating service.
type RatingServer interface {
	SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error)
	SystemReloadConfig(context.Context, *SystemReloadConfigRequestStruct) (*SystemReloadConfigResponseStruct, error)
	SystemReloadSharding(context.Context, *SystemReloadShardingRequestStruct) (*SystemReloadShardingResponseStruct, error)
	SystemCheckSharding(context.Context, *SystemCheckShardingRequestStruct) (*SystemCheckShardingResponseStruct, error)
	RatingUpdateConversationAnswerState(context.Context, *RatingUpdateConversationAnswerStateRequestStruct) (*RatingUpdateConversationAnswerStateResponseStruct, error)
	RatingUpdateConversationAnswerStateForReceivers(context.Context, *RatingUpdateConversationAnswerStateForReceiversRequestStruct) (*RatingUpdateConversationAnswerStateForReceiversResponseStruct, error)
	RatingCloseMicroConversation(context.Context, *RatingCloseMicroConversationRequestStruct) (*RatingCloseMicroConversationResponseStruct, error)
	RatingAddScreenTime(context.Context, *RatingAddScreenTimeRequestStruct) (*RatingAddScreenTimeResponseStruct, error)
	RatingIncActionCount(context.Context, *RatingIncActionCountRequestStruct) (*RatingIncActionCountResponseStruct, error)
}

// UnimplementedRatingServer can be embedded to have forward compatible implementations.
type UnimplementedRatingServer struct {
}

func (*UnimplementedRatingServer) SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemStatus not implemented")
}
func (*UnimplementedRatingServer) SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceGoroutine not implemented")
}
func (*UnimplementedRatingServer) SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceMemory not implemented")
}
func (*UnimplementedRatingServer) SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCpuProfile not implemented")
}
func (*UnimplementedRatingServer) SystemReloadConfig(context.Context, *SystemReloadConfigRequestStruct) (*SystemReloadConfigResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReloadConfig not implemented")
}
func (*UnimplementedRatingServer) SystemReloadSharding(context.Context, *SystemReloadShardingRequestStruct) (*SystemReloadShardingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReloadSharding not implemented")
}
func (*UnimplementedRatingServer) SystemCheckSharding(context.Context, *SystemCheckShardingRequestStruct) (*SystemCheckShardingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCheckSharding not implemented")
}
func (*UnimplementedRatingServer) RatingUpdateConversationAnswerState(context.Context, *RatingUpdateConversationAnswerStateRequestStruct) (*RatingUpdateConversationAnswerStateResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RatingUpdateConversationAnswerState not implemented")
}
func (*UnimplementedRatingServer) RatingUpdateConversationAnswerStateForReceivers(context.Context, *RatingUpdateConversationAnswerStateForReceiversRequestStruct) (*RatingUpdateConversationAnswerStateForReceiversResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RatingUpdateConversationAnswerStateForReceivers not implemented")
}
func (*UnimplementedRatingServer) RatingCloseMicroConversation(context.Context, *RatingCloseMicroConversationRequestStruct) (*RatingCloseMicroConversationResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RatingCloseMicroConversation not implemented")
}
func (*UnimplementedRatingServer) RatingAddScreenTime(context.Context, *RatingAddScreenTimeRequestStruct) (*RatingAddScreenTimeResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RatingAddScreenTime not implemented")
}
func (*UnimplementedRatingServer) RatingIncActionCount(context.Context, *RatingIncActionCountRequestStruct) (*RatingIncActionCountResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RatingIncActionCount not implemented")
}

func RegisterRatingServer(s *grpc.Server, srv RatingServer) {
	s.RegisterService(&_Rating_serviceDesc, srv)
}

func _Rating_SystemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemStatusRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemStatus(ctx, req.(*SystemStatusRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_SystemTraceGoroutine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceGoroutineRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemTraceGoroutine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemTraceGoroutine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemTraceGoroutine(ctx, req.(*SystemTraceGoroutineRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_SystemTraceMemory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceMemoryRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemTraceMemory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemTraceMemory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemTraceMemory(ctx, req.(*SystemTraceMemoryRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_SystemCpuProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCpuProfileRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemCpuProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemCpuProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemCpuProfile(ctx, req.(*SystemCpuProfileRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_SystemReloadConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemReloadConfigRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemReloadConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemReloadConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemReloadConfig(ctx, req.(*SystemReloadConfigRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_SystemReloadSharding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemReloadShardingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemReloadSharding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemReloadSharding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemReloadSharding(ctx, req.(*SystemReloadShardingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_SystemCheckSharding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCheckShardingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).SystemCheckSharding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/SystemCheckSharding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).SystemCheckSharding(ctx, req.(*SystemCheckShardingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_RatingUpdateConversationAnswerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingUpdateConversationAnswerStateRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).RatingUpdateConversationAnswerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/RatingUpdateConversationAnswerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).RatingUpdateConversationAnswerState(ctx, req.(*RatingUpdateConversationAnswerStateRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_RatingUpdateConversationAnswerStateForReceivers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingUpdateConversationAnswerStateForReceiversRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).RatingUpdateConversationAnswerStateForReceivers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/RatingUpdateConversationAnswerStateForReceivers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).RatingUpdateConversationAnswerStateForReceivers(ctx, req.(*RatingUpdateConversationAnswerStateForReceiversRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_RatingCloseMicroConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingCloseMicroConversationRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).RatingCloseMicroConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/RatingCloseMicroConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).RatingCloseMicroConversation(ctx, req.(*RatingCloseMicroConversationRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_RatingAddScreenTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingAddScreenTimeRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).RatingAddScreenTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/RatingAddScreenTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).RatingAddScreenTime(ctx, req.(*RatingAddScreenTimeRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rating_RatingIncActionCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingIncActionCountRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).RatingIncActionCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ratingGrpc.rating/RatingIncActionCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).RatingIncActionCount(ctx, req.(*RatingIncActionCountRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rating_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ratingGrpc.rating",
	HandlerType: (*RatingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SystemStatus",
			Handler:    _Rating_SystemStatus_Handler,
		},
		{
			MethodName: "SystemTraceGoroutine",
			Handler:    _Rating_SystemTraceGoroutine_Handler,
		},
		{
			MethodName: "SystemTraceMemory",
			Handler:    _Rating_SystemTraceMemory_Handler,
		},
		{
			MethodName: "SystemCpuProfile",
			Handler:    _Rating_SystemCpuProfile_Handler,
		},
		{
			MethodName: "SystemReloadConfig",
			Handler:    _Rating_SystemReloadConfig_Handler,
		},
		{
			MethodName: "SystemReloadSharding",
			Handler:    _Rating_SystemReloadSharding_Handler,
		},
		{
			MethodName: "SystemCheckSharding",
			Handler:    _Rating_SystemCheckSharding_Handler,
		},
		{
			MethodName: "RatingUpdateConversationAnswerState",
			Handler:    _Rating_RatingUpdateConversationAnswerState_Handler,
		},
		{
			MethodName: "RatingUpdateConversationAnswerStateForReceivers",
			Handler:    _Rating_RatingUpdateConversationAnswerStateForReceivers_Handler,
		},
		{
			MethodName: "RatingCloseMicroConversation",
			Handler:    _Rating_RatingCloseMicroConversation_Handler,
		},
		{
			MethodName: "RatingAddScreenTime",
			Handler:    _Rating_RatingAddScreenTime_Handler,
		},
		{
			MethodName: "RatingIncActionCount",
			Handler:    _Rating_RatingIncActionCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/go_rating.proto",
}
